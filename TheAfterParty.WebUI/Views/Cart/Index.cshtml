@using TheAfterParty.WebUI.Models.Cart
@model CartIndexViewModel
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper QuantitySelect(int num, int current)
{
string disabledText = "";

if (num == 1)
{
    disabledText = "disabled";
}

    <select @disabledText>

        @for (int i = 1; i <= num; i++)
    {
        string selectedText = "";

        if (i == current)
        {
            selectedText = "selected";
        }

        <option value="@i" @selectedText>@i</option>
        }

    </select>
}

@if (Model.LoggedInUser.GetCartQuantity() == 0)
{
    <br />
    <br />
    <div class="text-left text-primary">There are no items in your cart!</div>
    <br />
    <br />
}
else
{
    <h3>@(Model.LoggedInUser.UserName)'s cart</h3>
    <br/>
    if (Model.LoggedInUser.AssertQuantityOfCart() == false)
    {
        <span class="text-warning">The quantity of some items in your cart exceeds the available quantity.</span><br/>
    }
    if (Model.LoggedInUser.AssertBalanceExceedsCost() == false)
    {
        <span class="text-warning">The cost of the items in the cart exceeds your unreserved balance.</span><br />
    }
    <br />
    <div class="container">
        <div class="row">
            <div class="col-lg-2 text-primary"></div>
            <div class="col-lg-1 text-primary">Quantity</div>
            <div class="col-lg-7 text-primary">Game</div>
            <div class="col-lg-1 text-primary">Price</div>
            <div class="col-lg-1 text-primary">Subtotal</div>
        </div>
        @for (int i = 0; i < Model.CartEntries.Count(); i++)
        {
            <div class="row store-entry-sm">
                <div class="col-lg-2">
                    @using (Html.BeginForm("RemoveItem", "Cart", new { shoppingId = Model.CartEntries.ElementAt(i).ShoppingCartEntryID }, FormMethod.Post, new { @class = "tag-inline" }))
                    {
                    <div class="tag-inline">
                        @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                        <button type="submit" class="btn-transparent">
                            <i class="glyphicon glyphicon-remove store-blacklist"></i>
                        </button>
                    </div>
                    }
                    @if (Model.CartEntries.ElementAt(i).Quantity > 0)
                    {
                        using (Html.BeginForm("DecrementCartQuantity", "Cart", FormMethod.Post, new { @class = "tag-inline" }))
                        {
                        <div class="tag-inline">
                            @Html.HiddenFor(m => m.CartEntries.ElementAt(i).ShoppingCartEntryID)
                            @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                            <button type="submit" class="btn-transparent tag-inline">
                                <i class="glyphicon glyphicon-minus store-blacklist tag-inline"></i>
                            </button>
                        </div>
                        }
                    }
                    @*<div class="tag-inline">
                        @QuantitySelect(Model.CartEntries.ElementAt(i).Listing.Quantity, @Model.CartEntries.ElementAt(i).Quantity)
                    </div>*@
                    @if (Model.CartEntries.ElementAt(i).Quantity > Model.CartEntries.ElementAt(i).Listing.Quantity)
                    {
                        <span class="text-warning">@Model.CartEntries.ElementAt(i).Quantity</span>
                    }
                    else
                    {
                        <span class="text-success">@Model.CartEntries.ElementAt(i).Quantity</span>
                    }
                    @if (Model.CartEntries.ElementAt(i).Quantity < Model.CartEntries.ElementAt(i).Listing.Quantity)
                    {
                        using (Html.BeginForm("IncrementCartQuantity", "Cart", FormMethod.Post, new { @class = "tag-inline" }))
                        {
                        <div class="tag-inline">
                            @Html.HiddenFor(m => m.CartEntries.ElementAt(i).ShoppingCartEntryID)
                            @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                            <button type="submit" class="btn-transparent">
                                <i class="glyphicon glyphicon-plus tag-inline text-success"></i>
                            </button>
                        </div>
                        }
                    }
                </div>
                <div class="col-lg-1">@Model.CartEntries.ElementAt(i).Quantity</div>
                <div class="col-lg-7">
                    <div class="outer-banner-container">
                        <div class="inner-store-banner-container" style="background-image: url(@Model.CartEntries.ElementAt(i).Listing.Product.ProductDetail.HeaderImageURL)"></div>
                    </div>
                    <div class="store-entry-name">
                        @Model.CartEntries.ElementAt(i).Listing.ListingName
                    </div>
                </div>
                <div class="col-lg-1">@Model.CartEntries.ElementAt(i).Listing.SaleOrDefaultPrice()</div>
                <div class="col-lg-1">@(Model.CartEntries.ElementAt(i).Listing.SaleOrDefaultPrice() * Model.CartEntries.ElementAt(i).Quantity)</div>
            </div>
        }
        <div class="row">
            <div class="col-lg-10"></div>
            <div class="col-lg-1 text-primary">
                Total:
            </div>
            <div class="col-lg-1">
                @Model.LoggedInUser.GetCartTotal()
            </div>
        </div>
    </div>
}