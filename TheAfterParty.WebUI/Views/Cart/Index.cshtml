@using TheAfterParty.WebUI.Models.Cart
@using TheAfterParty.Domain.Entities
@model CartIndexViewModel
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper QuantitySelect(int num, int current)
{
string disabledText = "";

if (num == 1)
{
    disabledText = "disabled";
}

    <select @disabledText>

        @for (int i = 1; i <= num; i++)
    {
        string selectedText = "";

        if (i == current)
        {
            selectedText = "selected";
        }

        <option value="@i" @selectedText>@i</option>
        }

    </select>
}

<div class="col-xl-10 col-lg-10 col-md-10">
@if (Model.CartEntries.Count() == 0)                           //Model.LoggedInUser.GetCartQuantity() == 0)
{
    <div class="row custom-row-header"><h3>@(Model.LoggedInUser.UserName)'s Cart</h3></div>
    <br/>
    <br/>
    <div class="text-left text-primary">There are no items in your cart!</div>
    <br />
    <br />
}
else
{
    if (Model.LoggedInUser.AssertQuantityOfCart() == false || Model.LoggedInUser.AssertBalanceExceedsCost() == false)
    {
        <div class="row custom-row-hollow text-warning top-content-margin">
            <ul>
            @if (Model.LoggedInUser.AssertQuantityOfCart() == false)
            {
                <li>The quantity of some items in your cart exceeds the available quantity.</li>
            }
            @if (Model.LoggedInUser.AssertBalanceExceedsCost() == false)
            {
                <li>The cost of the items in the cart exceeds your unreserved balance.</li>
            }
            </ul>
        </div>
    }
    <div class="row custom-row-header no-top-marg"><h3>@(Model.LoggedInUser.UserName)'s Cart</h3></div>
    <div class="row custom-row col-header text-center">
        <div class="col-lg-1 col-md-1 col-xl-1"></div>
        <div class="col-lg-6 col-md-6 col-xl-7">Game</div>
        <div class="col-lg-1 col-md-1 col-xl-1">Platform</div>
        <div class="col-lg-2 col-md-2 col-xl-1">Quantity</div>
        <div class="col-lg-1 col-md-1 col-xl-1">Price</div>
        <div class="col-lg-1 col-md-1 col-xl-1">Subtotal</div>
    </div>
    int i = 0;
    foreach (ShoppingCartEntry currentEntry in Model.CartEntries)
    {
        <div class="row store-entry-sm col-text text-center">
            <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                @using (Html.BeginForm("RemoveItem", "Cart", new { shoppingId = currentEntry.ShoppingCartEntryID }, FormMethod.Post, new { @class = "tag-inline" }))
                {
                <div class="tag-inline">
                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                    <button type="submit" class="btn-transparent">
                        <i class="fa fa-remove fa-lg store-blacklist-active"></i>
                    </button>
                </div>
                }
            </div>
            <div class="col-lg-7 col-md-7 col-xl-7 vertical-align">
                @if (currentEntry.Listing.IsComplex())
                {
                var listing = "listing" + i + "id";
                <div id="@listing" onclick="ToggleHiddenAlt(this)">
                    <span class="fa fa-fw fa-lg fa-chevron-right pad-left expand-button icon-blue"></span>
                </div>
                }
                <div class="outer-banner-container">
                    @if (String.IsNullOrEmpty(currentEntry.Listing?.Product?.GetHttpsSecuredHeaderImage()))
                    {
                        <div class="inner-store-banner-container" style="background-image: url('/Content/applogo.gif')"></div>
                    }
                    else
                    {
                        <div class="inner-store-banner-container" style="background-image: url(@currentEntry.Listing.Product.GetHttpsSecuredHeaderImage())"></div>
                    }
                </div>
                <div class="store-entry-name">
                    @currentEntry.Listing.ListingName
                </div>
            </div>
            <div class="col-lg-1 col-md-1 col-xl-1">
                @foreach (string platformIconUrl in currentEntry.Listing.Platforms.OrderBy(p => p.PlatformName).Select(p => p.PlatformIconURL))
                    {
                    <div class="icon-image-container">
                        <div class="icon-image text-center" style="background-image: url('@platformIconUrl')"></div>
                    </div>
                }
            </div>
            <div class="col-lg-1 col-md-1 col-xl-1">
                @if (currentEntry.Quantity > currentEntry.Listing.Quantity)
                {
                    <span class="text-warning">@currentEntry.Quantity</span>
                }
                else
                {
                    <span class="text-success">@currentEntry.Quantity</span>
                }
            </div>
            <div class="col-lg-1 col-md-1 col-xl-1 text-success">
                @if (currentEntry.Listing.HasSale())
                {
                    <del>@currentEntry.Listing.ListingPrice</del>   <span class="text-success tag-inline">@currentEntry.Listing.SaleOrDefaultPrice()</span>
                }
                else
                {
                    @currentEntry.Listing.ListingPrice
                }
            </div>
            <div class="col-lg-1 col-md-1 col-xl-1 text-success">@(currentEntry.Listing.SaleOrDefaultPrice() * currentEntry.Quantity)</div>
        </div>
        if (currentEntry.Listing.ChildListings != null && currentEntry.Listing.ChildListings.Count > 0)
        {
            var id = "listing" + i + "id1";
            <div class="is-hidden" id="@id">
                @foreach (Listing child in currentEntry.Listing.ChildListings)
                {
                <div class="row store-sub-entry-sm">
                    <div class="col-lg-2 col-md-2 col-xl-2"></div>
                    <div class="col-lg-6 col-md-6 col-xl-6 vertical-align">
                        <div class="outer-banner-container">
                            @if (String.IsNullOrEmpty(child?.Product?.GetHttpsSecuredHeaderImage()))
                            {
                                <div class="inner-store-banner-container" style="background-image: url('/Content/applogo.gif')"></div>
                            }
                            else
                            {
                                <div class="inner-store-banner-container" style="background-image: url(@child.Product.GetHttpsSecuredHeaderImage())"></div>
                            }
                        </div>
                        <div class="store-entry-name">
                            @child.ListingName
                        </div>
                    </div>
                    <div class="col-lg-1 col-md-1 col-xl-1">
                        @foreach (string platformIconUrl in child.Platforms.OrderBy(p => p.PlatformName).Select(p => p.PlatformIconURL))
                        {
                            <div class="icon-image-container">
                                <div class="icon-image text-center" style="background-image: url('@platformIconUrl')"></div>
                            </div>
                        }
                    </div>
                    <div class="col-lg-2 col-md-2 col-xl-2"></div>
                </div>
                }
            </div>
        }
        i++;
    }
    <br/>
    <div class="row text-center col-text">
        <div class="col-lg-10 col-md-10 col-xl-10"></div>
        <div class="col-lg-1 col-md-1 col-xl-1 text-primary">
            Total:
        </div>
        <div class="col-lg-1 col-md-1 col-xl-1">
            @if (Model.LoggedInUser.Balance < Model.LoggedInUser.GetCartTotal())
            {
                <span class="text-warning">@Model.LoggedInUser.GetCartTotal()</span>
            }
            else
            {
                <span class="text-success">@Model.LoggedInUser.GetCartTotal()</span>
            }
        </div>
    </div>
}
</div>
<div class="col-xl-2 col-lg-2 col-md-2">
    <h3 class="text-primary nav-grouping-header store-search">Actions</h3>
    <a href="@Url.Action("EmptyCart","Cart")" class="btn btn-sm btn-success btn-custom empty-confirm">Empty Cart</a>
    <div class="top-padding-sm"></div>
    @if (Model.LoggedInUser.Balance < Model.LoggedInUser.GetCartTotal())
    {
        <span class="btn btn-sm btn-custom btn-disabled">Purchase</span>
    }
    else
    {
        <a href="@Url.Action("Purchase", "Cart")" class="btn btn-sm btn-success btn-custom">Purchase</a>
    }
</div>