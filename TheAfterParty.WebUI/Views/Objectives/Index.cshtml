@using TheAfterParty.Domain.Entities
@using TheAfterParty.WebUI.Models.Objectives
@model ObjectivesIndexViewModel

@{
    ViewBag.Title = "Objectives";
}


@using (Html.BeginForm(Model.FormName, "Objectives", null, FormMethod.Post, new { id = ViewBag.StoreFormID }))
{
@Html.HiddenFor(x => x.PreviousFilterLibrary)
<div>
    <div class="row">
        <div class="col-lg-10 col-md-10 col-xl-10">
            <div class="row custom-row-header"><h3>Objectives</h3></div>
            @{ 
                int k = 1;
                foreach (ICollection<Objective> group in Model.MiscObjectives.GroupBy(o => o.Title))
                {
                    k++;
                    string id = "noprod" + k + "p";
                    <div class="row custom-row clickable" id="@id" onclick="ToggleHidden(this,@id)">
                    <div class="col-lg-11 col-md-11 col-xl-11">
                        <span class="objective-title">@group.FirstOrDefault().Title</span>
                    </div>
                    <div class="col-lg-1 col-md-1 col-xl-1">
                        <span class="fa fa-chevron-up fa-2x expand-button"></span>
                    </div>
                </div>
                    <div id="@(id)1" class="is-hidden">
                        <div class="row custom-row col-header">
                            <div class="col-lg-1 col-md-1 col-xl-1">ID</div>
                            <div class="col-lg-6 col-md-6 col-xl-6 text-center">Objective</div>
                            <div class="col-lg-1 col-md-1 col-xl-1">Monuplay</div>
                            <div class="col-lg-1 col-md-1 col-xl-1">Boosted</div>
                            <div class="col-lg-1 col-md-1 col-xl-1">Reward</div>
                            <div class="col-lg-1 col-md-1 col-xl-1">Expires</div>
                        </div>
                        @foreach (Objective obj in group)
                        {
                            <div class="row store-entry-sm objective-row text-center">
                                <div class="col-lg-1 col-md-1 col-xl-1 col-text text-lblue">@obj.ObjectiveID</div>
                                <div class="col-lg-6 col-md-6 col-xl-6 text-left">
                                    <p><span class="objective-name">@obj.ObjectiveName</span><br />@obj.Description</p>
                                </div>
                                <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                                    @if (obj.RequiresAdmin == false)
                                    {
                                        <span class="fa fa-close fa-lg text-danger"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-check fa-lg text-success"></span>
                                    }
                                </div>
                                <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                                    @if (obj.BoostedObjective == null)
                                    {
                                        <span class="fa fa-close fa-lg text-danger"></span>
                                    }
                                    else
                                    {
                                        <span class="col-text text-success">@(obj.BoostedObjective.BoostAmount)X</span>
                                    }
                                </div>
                                <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                                    @if (obj.BoostedObjective == null)
                                    {
                                        <span class="col-text">@obj.FixedReward()</span>
                                    }
                                    else
                                    {
                                        <span class="col-text text-success">@obj.FixedReward()</span>
                                    }
                                </div>
                                <div class="col-lg-1 col-md-1 col-xl-1 text-center col-text">
                                    @if (obj.BoostedObjective == null)
                                    {
                                        <span class="fa fa-close fa-lg text-danger"></span>
                                    }
                                    else
                                    {
                                        <span class="objective-date">@(Model.GetConvertedDateTime(obj.BoostedObjective.EndDate).ToString("d MMM"))</span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            }
            @foreach (ICollection<Objective> group in Model.Objectives.GroupBy(o => o.Title))
            {
                string id = "prod" + group.First().Product.ProductID + "p";
                <div class="row custom-row clickable" id="@id" onclick="ToggleHidden(this,@id)">
                    <div class="col-lg-11 col-md-11 col-xl-11">
                        @if (group.FirstOrDefault()?.Product != null)
                        {
                            <div class="outer-banner-container-row">
                                @if (String.IsNullOrEmpty(group.FirstOrDefault().Product.GetHttpsSecuredHeaderImage()))
                                {
                                    <div class="inner-store-banner-container-row delayed-load" data-src="/Content/applogo.gif" style="background-image: url('a.gif')"></div>
                                }
                                else
                                {
                                    <div class="inner-store-banner-container-row delayed-load" data-src="@group.FirstOrDefault().Product.GetHttpsSecuredHeaderImage()" style="background-image: url('a.gif')"></div>
                                }
                            </div>
                        }
                        <span class="objective-title">@group.FirstOrDefault().Title</span>
                    </div>
                    <div class="col-lg-1 col-md-1 col-xl-1">
                        <span class="fa fa-chevron-up fa-2x expand-button"></span>
                    </div>
                </div>
                <div id="@(id)1" class="is-hidden">
                    <div class="row custom-row col-header">
                        <div class="col-lg-1 col-md-1 col-xl-1">ID</div>
                        <div class="col-lg-6 col-md-6 col-xl-6 text-center" >Objective</div>
                        <div class="col-lg-1 col-md-1 col-xl-1">Monuplay</div>
                        <div class="col-lg-1 col-md-1 col-xl-1">Boosted</div>
                        <div class="col-lg-1 col-md-1 col-xl-1">Reward</div>
                        <div class="col-lg-1 col-md-1 col-xl-1">Expires</div>
                    </div>
                    @foreach (Objective obj in group)
                    {
                        <div class="row store-entry-sm objective-row text-center">
                            <div class="col-lg-1 col-md-1 col-xl-1 col-text text-lblue">@obj.ObjectiveID</div>
                            <div class="col-lg-6 col-md-6 col-xl-6 text-left">
                                <p><span class="objective-name">@obj.ObjectiveName</span><br />@obj.Description</p>
                            </div>
                            <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                                @if (obj.RequiresAdmin == false)
                                {
                                    <span class="fa fa-close fa-lg text-danger"></span>
                                }
                                else
                                {
                                    <span class="fa fa-check fa-lg text-success"></span>
                                }
                            </div>
                            <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                                @if (obj.BoostedObjective == null)
                                {
                                    <span class="fa fa-close fa-lg text-danger"></span>
                                }
                                else
                                {
                                    <span class="col-text text-success">@(obj.BoostedObjective.BoostAmount)X</span>
                                }
                            </div>
                            <div class="col-lg-1 col-md-1 col-xl-1 text-center">
                                @if (obj.BoostedObjective == null)
                                {
                                    <span class="col-text">@obj.FixedReward()</span>
                                }
                                else
                                {
                                    <span class="col-text text-success">@obj.FixedReward()</span>
                                }
                            </div>
                            <div class="col-lg-1 col-md-1 col-xl-1 text-center col-text">
                                @if (obj.BoostedObjective == null)
                                {
                                    <span class="fa fa-close fa-lg text-danger"></span>
                                }
                                else
                                {
                                    <span class="objective-date">@(Model.GetConvertedDateTime(obj.BoostedObjective.EndDate).ToString("d MMM"))</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
        <div class="col-lg-2 col-md-2 col-xl-2">
            @if (Context.User.Identity.IsAuthenticated)
            {
                <h3 class="text-primary nav-grouping-header store-search">User Filters</h3>
                <div class="filter-div">
                    @if (Model.PreviousFilterLibrary)
                    {
                        <button type="submit" class="btn-transparent" name="FilterLibrary" value="true">
                            <i class="fa fa-square fa-lg fa-lg text-success"></i> @Html.Label("Owned", new { @class = "text-success store-filter" })
                        </button>
                    }
                    else
                    {
                        <button type="submit" class="btn-transparent" name="FilterLibrary" value="true">
                            <i class="fa fa-square-o fa-lg text-success"></i> @Html.Label("Owned", new { @class = "text-success store-filter" })
                        </button>
                    }
                </div>
                <h3 class="text-primary nav-grouping-header">Genres & Tags</h3>
            }
            else
            {
                <h3 class="text-primary nav-grouping-header store-search">Genres & Tags</h3>
            }
            @if (Model.SelectedTagMappings != null)
            {
                for (int i = 0; i < Model.SelectedTagMappings.Count(); i++)
                {
                    string idString = "SelectedTagMappings_" + i + "__IsSelected";
                    @Html.HiddenFor(x => x.SelectedTagMappings[i].StoreTag.TagID)
                    @Html.HiddenFor(x => x.SelectedTagMappings[i].StoreTag.TagName)
                    @Html.HiddenFor(x => x.SelectedTagMappings[i].IsSelected)
                    <div class="filter-div">
                        @if (Model.SelectedTagMappings[i].IsSelected)
                        {
                        <button class="btn-transparent text-nowrap" type="submit" name="TagToChange" value="@Model.SelectedTagMappings[i].StoreTag.TagID">
                            <i class="fa fa-square fa-lg fa-lg text-success"></i> @Html.Label(Model.SelectedTagMappings[i].StoreTag.TagName, new { @class = "store-filter text-success" })
                        </button>
                        }
                        else
                        {
                        <button class="btn-transparent text-nowrap" type="submit" name="TagToChange" value="@Model.SelectedTagMappings[i].StoreTag.TagID">
                            <i class="fa fa-square-o fa-lg text-success"></i> @Html.Label(Model.SelectedTagMappings[i].StoreTag.TagName, new { @class = "store-filter text-success" })
                        </button>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>
}
